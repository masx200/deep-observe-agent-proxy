{"version":3,"file":"index.min.js","sources":["index.js"],"sourcesContent":["const Setprototype = Set.prototype;\r\nconst Mapprototype = Map.prototype;\r\nfunction ispromise(a) {\r\n    return a instanceof Promise;\r\n}\r\nfunction isdate(a) {\r\n    return a instanceof Date;\r\n}\r\nfunction isregexp(a) {\r\n    return a instanceof RegExp;\r\n}\r\nfunction isMap(a) {\r\n    return a instanceof Map;\r\n}\r\nfunction isSet(a) {\r\n    return a instanceof Set;\r\n}\r\nfunction isArray(a) {\r\n    return Array.isArray(a);\r\n}\r\nconst Reflect = window.Reflect;\r\nconst { ownKeys, deleteProperty, apply, construct, defineProperty, get, getOwnPropertyDescriptor, getPrototypeOf, has, set, setPrototypeOf } = Reflect;\r\nfunction isobject(a) {\r\n    return typeof a === \"object\" && a !== null;\r\n}\r\nfunction isfunction(a) {\r\n    return typeof a === \"function\";\r\n}\r\nfunction deepobserveaddpath(target, callback, patharray = [], ancestor = target) {\r\n    if (!isfunction(callback)) {\r\n        console.error(callback);\r\n        console.error(\"observe callback invalid !\");\r\n        throw Error();\r\n    }\r\n    if (ispromise(target) || isregexp(target) || isdate(target)) {\r\n        return target;\r\n    }\r\n    if (isfunction(target) || isobject(target)) {\r\n        let fakeobj;\r\n        if (isSet(target)) {\r\n            fakeobj = new Set([...target]);\r\n            set(fakeobj, \"add\", (value) => {\r\n                Setprototype.add.call(target, value);\r\n                callback(ancestor, patharray, undefined, undefined);\r\n                return Setprototype.add.call(fakeobj, value);\r\n            });\r\n            set(fakeobj, \"delete\", (value) => {\r\n                Setprototype.delete.call(target, value);\r\n                callback(ancestor, patharray, undefined, undefined);\r\n                return Setprototype.delete.call(fakeobj, value);\r\n            });\r\n            set(fakeobj, \"clear\", () => {\r\n                Setprototype.clear.call(target);\r\n                callback(ancestor, patharray, undefined, undefined);\r\n                return Setprototype.clear.call(fakeobj);\r\n            });\r\n        }\r\n        else if (isMap(target)) {\r\n            fakeobj = new Map([...target]);\r\n            set(fakeobj, \"clear\", () => {\r\n                Mapprototype.clear.call(target);\r\n                callback(ancestor, patharray, undefined, undefined);\r\n                return Mapprototype.clear.call(fakeobj);\r\n            });\r\n            set(fakeobj, \"set\", (key, value) => {\r\n                Mapprototype.set.call(target, key, value);\r\n                callback(ancestor, patharray, undefined, undefined);\r\n                return Mapprototype.set.call(fakeobj, key, value);\r\n            });\r\n            set(fakeobj, \"delete\", (value) => {\r\n                Mapprototype.delete.call(target, value);\r\n                callback(ancestor, patharray, undefined, undefined);\r\n                return Mapprototype.delete.call(fakeobj, value);\r\n            });\r\n        }\r\n        else if (isArray(target)) {\r\n            fakeobj = [];\r\n        }\r\n        else if (isfunction(target)) {\r\n            fakeobj = (() => { });\r\n        }\r\n        else {\r\n            fakeobj = {};\r\n        }\r\n        if (!isSet(target) && !isMap(target)) {\r\n            setPrototypeOf(fakeobj, null);\r\n        }\r\n        return new Proxy(fakeobj, {\r\n            defineProperty(t, p, a) {\r\n                callback(ancestor, [...patharray, String(p)], has(a, \"value\") ? a.value : isfunction(a.get) ? a.get() : undefined, get(target, p));\r\n                return defineProperty(target, p, a);\r\n            },\r\n            deleteProperty(t, p) {\r\n                callback(ancestor, [...patharray, String(p)], undefined, get(target, p));\r\n                return deleteProperty(target, p);\r\n            },\r\n            ownKeys() {\r\n                return ownKeys(target);\r\n            },\r\n            has(t, p) {\r\n                return has(target, p);\r\n            },\r\n            getPrototypeOf() {\r\n                return getPrototypeOf(target);\r\n            },\r\n            setPrototypeOf(t, v) {\r\n                return setPrototypeOf(target, v);\r\n            },\r\n            construct(t, argumentslist) {\r\n                if (isfunction(target)) {\r\n                    return construct(target, argumentslist);\r\n                }\r\n            },\r\n            apply(t, thisarg, argarray) {\r\n                if (isfunction(target)) {\r\n                    return apply(target, thisarg, argarray);\r\n                }\r\n            },\r\n            getOwnPropertyDescriptor(t, k) {\r\n                var descripter = getOwnPropertyDescriptor(target, k);\r\n                if (isArray(target) && k === \"length\") {\r\n                    return descripter;\r\n                }\r\n                else {\r\n                    if (descripter) {\r\n                        descripter.configurable = true;\r\n                        return descripter;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                }\r\n            },\r\n            set(t, k, v) {\r\n                if (isfunction(callback)) {\r\n                    callback(ancestor, [...patharray, String(k)], v, get(target, k));\r\n                }\r\n                return set(target, k, v);\r\n            },\r\n            get(t, k) {\r\n                var value = get(target, k);\r\n                if (isfunction(value) && (isSet(target) || isMap(target))) {\r\n                    return get(fakeobj, k).bind(fakeobj);\r\n                }\r\n                if (isfunction(value) || isobject(value)) {\r\n                    return deepobserveaddpath(value, callback, [...patharray, String(k)], target);\r\n                }\r\n                else {\r\n                    return value;\r\n                }\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        return target;\r\n    }\r\n}\r\nfunction observedeepagent(target, callback) {\r\n    if (!isfunction(callback)) {\r\n        console.error(callback);\r\n        console.error(\"observe callback  invalid function !\");\r\n        throw Error();\r\n    }\r\n    if (!isfunction(Proxy)) {\r\n        console.error(\"Proxy unsupported!\");\r\n        throw Error();\r\n    }\r\n    if (isfunction(target) || isobject(target)) {\r\n        return deepobserveaddpath(target, callback);\r\n    }\r\n    else {\r\n        return target;\r\n    }\r\n}\n\nexport default observedeepagent;\n//# sourceMappingURL=index.js.map\n"],"names":["Setprototype","Set","prototype","Mapprototype","Map","isMap","a","isSet","isArray","Array","Reflect","window","ownKeys","deleteProperty","apply","construct","defineProperty","get","getOwnPropertyDescriptor","getPrototypeOf","has","set","setPrototypeOf","isobject","isfunction","deepobserveaddpath","target","callback","patharray","ancestor","Error","Promise","RegExp","isregexp","Date","isdate","fakeobj","value","add","call","undefined","delete","clear","key","Proxy","t","p","String","v","[object Object]","argumentslist","thisarg","argarray","k","descripter","configurable","bind"],"mappings":"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"}