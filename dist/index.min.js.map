{"version":3,"file":"index.min.js","sources":["index.js"],"sourcesContent":["const Reflect = window.Reflect;\r\nfunction isobject(a) {\r\n    return typeof a === \"object\" && a !== null;\r\n}\r\nfunction isfunction(a) {\r\n    return typeof a === \"function\";\r\n}\r\nfunction deepobserveaddpath(target, callback, patharray = [], ancestor = target) {\r\n    if (typeof callback !== \"function\") {\r\n        throw Error(\"observe callback is not valid function !\");\r\n    }\r\n    if (isfunction(target) || isobject(target)) {\r\n        let forkobj;\r\n        if (isobject(target)) {\r\n            forkobj = {};\r\n        }\r\n        else {\r\n            forkobj = () => { };\r\n        }\r\n        Reflect.setPrototypeOf(forkobj, null);\r\n        return (forkobj => {\r\n            return new Proxy(forkobj, {\r\n                defineProperty(t, p, a) {\r\n                    return Reflect.defineProperty(target, p, a);\r\n                },\r\n                deleteProperty(t, p) {\r\n                    callback(ancestor, [...patharray, p], undefined, Reflect.get(target, p));\r\n                    return Reflect.deleteProperty(target, p);\r\n                },\r\n                ownKeys() {\r\n                    return Reflect.ownKeys(target);\r\n                },\r\n                has(t, p) {\r\n                    return Reflect.has(target, p);\r\n                },\r\n                getPrototypeOf() {\r\n                    return Reflect.getPrototypeOf(target);\r\n                },\r\n                setPrototypeOf(t, v) {\r\n                    return Reflect.setPrototypeOf(target, v);\r\n                },\r\n                construct(t, argumentslist) {\r\n                    if (typeof target === \"function\") {\r\n                        return Reflect.construct(target, argumentslist);\r\n                    }\r\n                },\r\n                apply(t, thisarg, argarray) {\r\n                    if (typeof target === \"function\") {\r\n                        return Reflect.apply(target, thisarg, argarray);\r\n                    }\r\n                },\r\n                getOwnPropertyDescriptor(t, k) {\r\n                    var descripter = Reflect.getOwnPropertyDescriptor(target, k);\r\n                    if (descripter) {\r\n                        descripter.configurable = true;\r\n                        return descripter;\r\n                    }\r\n                    else {\r\n                        return;\r\n                    }\r\n                },\r\n                set(t, k, v) {\r\n                    if (typeof callback === \"function\") {\r\n                        callback(ancestor, [...patharray, k], v, Reflect.get(target, k));\r\n                    }\r\n                    return Reflect.set(target, k, v);\r\n                },\r\n                get(t, k) {\r\n                    var value = Reflect.get(target, k);\r\n                    if (isfunction(value) || isobject(value)) {\r\n                        return deepobserveaddpath(value, callback, [...patharray, k], target);\r\n                    }\r\n                    else {\r\n                        return value;\r\n                    }\r\n                }\r\n            });\r\n        })(forkobj);\r\n    }\r\n    else {\r\n        return target;\r\n    }\r\n}\r\nfunction observedeepagent(target, callback) {\r\n    if (typeof callback !== \"function\") {\r\n        throw Error(\"observe callback is not valid function !\");\r\n    }\r\n    if (typeof Proxy !== \"function\") {\r\n        setTimeout(() => {\r\n            throw Error(\"不支持Proxy!\");\r\n        }, 0);\r\n        return target;\r\n    }\r\n    if (isfunction(target) || isobject(target)) {\r\n        return deepobserveaddpath(target, callback, [], target);\r\n    }\r\n    else {\r\n        return target;\r\n    }\r\n}\n\nexport default observedeepagent;\n//# sourceMappingURL=index.js.map\n"],"names":["Reflect","window","isobject","a","isfunction","target","callback","Error","Proxy","setTimeout","deepobserveaddpath","patharray","ancestor","forkobj","setPrototypeOf","defineProperty","t","p","deleteProperty","undefined","get","ownKeys","has","getPrototypeOf","v","[object Object]","argumentslist","construct","thisarg","argarray","apply","k","descripter","getOwnPropertyDescriptor","configurable","set","value"],"mappings":"AAAA,MAAMA,EAAUC,OAAOD,QACvB,SAASE,EAASC,GACd,MAAoB,iBAANA,GAAwB,OAANA,EAEpC,SAASC,EAAWD,GAChB,MAAoB,mBAANA,iBA8ElB,SAA0BE,EAAQC,GAC9B,GAAwB,mBAAbA,EACP,MAAMC,MAAM,4CAEhB,MAAqB,mBAAVC,OACPC,WAAW,KACP,MAAMF,MAAM,6BACb,GACIF,GAEPD,EAAWC,IAAWH,EAASG,GAtFvC,SAASK,EAAmBL,EAAQC,EAAUK,EAAY,GAAIC,EAAWP,GACrE,GAAwB,mBAAbC,EACP,MAAMC,MAAM,4CAEhB,GAAIH,EAAWC,IAAWH,EAASG,GAAS,CACxC,IAAIQ,EAQJ,OANIA,EADAX,EAASG,GACC,GAGA,OAEdL,EAAQc,eAAeD,EAAS,MACzB,CAACA,GACG,IAAIL,MAAMK,EAAS,CACtBE,eAAc,CAACC,EAAGC,EAAGd,IACVH,EAAQe,eAAeV,EAAQY,EAAGd,GAE7Ce,eAAc,CAACF,EAAGC,KACdX,EAASM,EAAU,IAAID,EAAWM,QAAIE,EAAWnB,EAAQoB,IAAIf,EAAQY,IAC9DjB,EAAQkB,eAAeb,EAAQY,IAE1CI,QAAO,IACIrB,EAAQqB,QAAQhB,GAE3BiB,IAAG,CAACN,EAAGC,IACIjB,EAAQsB,IAAIjB,EAAQY,GAE/BM,eAAc,IACHvB,EAAQuB,eAAelB,GAElCS,eAAc,CAACE,EAAGQ,IACPxB,EAAQc,eAAeT,EAAQmB,GAE1CC,UAAUT,EAAGU,GACT,GAAsB,mBAAXrB,EACP,OAAOL,EAAQ2B,UAAUtB,EAAQqB,IAGzCD,MAAMT,EAAGY,EAASC,GACd,GAAsB,mBAAXxB,EACP,OAAOL,EAAQ8B,MAAMzB,EAAQuB,EAASC,IAG9CJ,yBAAyBT,EAAGe,GACxB,IAAIC,EAAahC,EAAQiC,yBAAyB5B,EAAQ0B,GAC1D,OAAIC,GACAA,EAAWE,cAAe,EACnBF,QAGP,GAGRG,IAAG,CAACnB,EAAGe,EAAGP,KACkB,mBAAblB,GACPA,EAASM,EAAU,IAAID,EAAWoB,GAAIP,EAAGxB,EAAQoB,IAAIf,EAAQ0B,IAE1D/B,EAAQmC,IAAI9B,EAAQ0B,EAAGP,IAElCC,IAAIT,EAAGe,GACH,IAAIK,EAAQpC,EAAQoB,IAAIf,EAAQ0B,GAChC,OAAI3B,EAAWgC,IAAUlC,EAASkC,GACvB1B,EAAmB0B,EAAO9B,EAAU,IAAIK,EAAWoB,GAAI1B,GAGvD+B,KArDhB,CAyDJvB,GAGH,OAAOR,EAcAK,CAAmBL,EAAQC,EAAU,GAAID,GAGzCA"}